@startuml
start
:从书城管理系统的卡券批开调用migu-server-intergration的/order/batchActiveVirtualCard接口进行批开会员并且纸书下单操作;
note right
每次请求接口处理大约5条数据
end note
partition 接口幂等性操作-查询表(TM_CREATE_ORDER_FAIL) {
   :对于参数的每个批开请求数据进行必要的参数校验;
   :幂等性校验：根据入参的CARD_NO查询TM_CREATE_ORDER_FAIL表,如果存在且MEMBER_STATUS为1,直接跳过该数据;
   note right
   关键参数:
   CARD_NO 书城卡号>>>唯一,不应重复;
   MUMBER_NUM 开通的会员周期数>>>批开存在开通多月会员情况,表现在ts_entity_card_order表中的有效期,目前次月续订下发兑书卡时无批次号;
   MUMBER_TYPE 开通的会员类型;
   MEMBER_STATUS 会员开通状态 1成功 2失败;
   CARD_STATUS 发卡状态 1 成功 2失败 仅用于仅生产订单;
   BATCH_NO 批次号>>>一次批开产生的兑书卡的批次号相同,不同批次产生的兑书卡不同;

   end note

}
if (幂等性校验通过(条件：在TM_CREATE_ORDER_FAIL表中无记录或者有记录但是MEMBER_STATUS为2失败))then(true)
   if (参数校验通过)then(true)
      :进行隐式注册;
      note right
      1.隐式注册流程中如果出现异常会导致整个接口异常结束,但是如果前面两个批开会员数据已经批开成功,事务是已提交状态(在TM_CREATE_ORDER_FAIL表已经插入成功),不会导致多发卡
      2.隐式注册流程会捕获HttpRequestException,并插入TM_CREATE_ORDER_FAIL表,并跳过该批开数据,执行下一条批开数据
      end note
      :根据入参传入的cardType转换为productId去查询TS_PRODUCT_INFO表;
      note right
      批开涉及的产品为非连续包月产品:10198钻石卡,10148金卡,10129亲子卡
      end note
      if (判断查询到的产品是否为空)then(true)
         :插入收货地址;
         note right
         插入地址出现异常,不会导致多发卡,原理与隐式注册出现异常相同
         end note
         :进入会员创建和发卡主流程!!!;
         partition 框内所有流程在同一个事务中管理! {

             partition 插入非连续包月支付表(TS_ENTITY_CARD_ORDER) {
                :插入以下字段;
                note right
                ENTITY_CARD_ORDER_ID   主键id
                MSISDN             身份ID
                MOBILE_NO          登录手机号
                PRODUCT_ID         产品ID
                PAY_STATUS         支付状态1:未支付; 2: 支付成功; 3: 支付失败; 4: 支付成功
                PAY_TYPE           批开插入的PAY_TYPE为4
                PAY_TIME           支付时间
                END_TIME           权益到期时间>>>根据入参传入的monthNum -1 进行计算
                CREATE_TIME        创建时间
                MODIFY_TIME        修改时间
                ORDER_CHANNEL      批开插入的ORDER_CHANNEL为4
                end note
             }

             partition 插入每月会员订购记录表(TS_MONTHLY_ORDER_DETAIL) {
                      :插入以下字段;
                      note right
                      MONTH 当前月份信息
                      USER_ID 用户Id
                      MONTHLY_ID 包月Id
                      ORDER_CHANNEL 新的产品Id
                      PAY_WAY  4 >>>批开
                      VIP_ORDER_ID 对应TS_ENTITY_CARD_ORDER的ENTITY_CARD_ORDER_ID
                      VIP_TYPE  2
                      end note
             }

			 :批开不会去校验是否下发过兑书卡;

             partition 下发兑书卡 {
                              :组装下发兑书卡参数;
                              note right
                              userId = userId
                              msisdn = msisdn
                              monthlyId = TS_MONTHLY_SET包月配置表对应产品的包月Id
                              displayFlag = 包月价格为8、29、68 的为2不展示，其他为1展示
                              effectiveTimeNum = TS_MONTHLY_SET包月配置表对应产品的兑书卡有效期
                              effectiveTimeType = TS_MONTHLY_SET包月配置表对应产品的兑书卡有效类型
                              num = 需要下发兑书卡数量 - 本月下发的兑书卡的数量
                              orderType = 1订购
                              channelCode = 入参渠道号
                              payWay = 2
                              monthlyOrderDetailId = TS_MONTHLY_ORDER_DETAIL每月订购记录的主键Id
                              end note
                              if (有效期类型 为1日)then(true)
                                 :有效期为 当前时间 + 有效期对应天数;
                              else if (有效期类型 为2月)then(true)
                                 :有效期为 当前时间 + 有效期对应月数;
                              else if (有效期类型 为3年)then(true)
                                 :有效期为 当前时间 + 有效期对应年数;
                              else
                                 :抛出有效期类型错误;
                              endif
                              if (num 不为0)then(true)
                                 :定义i=0,ids集合;
                                 while (i < num) is (true)
                                    :根据序列SEQ_ENTITY_CARD_ID创建兑书卡Id,并加入ids集合;
                                    :i++;
                                 end while(false)
                              endif
                              partition 遍历兑书卡ids集合 {
                                 partition 插入兑书卡表(TS_ENTITY_CARD_GIVEN) {
                                    :插入以下字段;
                                    note right
                                    DISPLAY_FLAG 展示标志，1：展示，2：不展示
                                    EFFECTIVE_TIME 有效期
                                    ENTITY_CARD_ID 兑书卡Id
                                    MONTHLY_ID 新的会员类型Id
                                    ORDER_TYPE 1:订购
                                    STATUS 1未使用
                                    USER_ID 用户Id
                                    MONTHLY_ORDER_DETAIL_ID 每月订购记录表的主键Id
                                    BATCH_ID 批次号 产品权益表的PARAM_VALUE中的ex_card_id的字段
                                    end note
                                    note right
                                    一个每月订购记录表的主键Id对应1或2个兑书卡记录，当前不可能大于两条记录
                                    end note
                                 }
                              }
                           }
         }
         :如果下发兑书卡的流程中失败,流程正常进行,在批开TM_CREATE_ORDER_FAIL中的表现是下发成功;
         note right
         可以在TS_EXCHANGE_CARD_GIVEN_FAIL找到该用户的失败记录,根据对应的MSISDN查找
         end note
      else (false)
      :跳过该条批开数据, 并组装失败参数,用于接口返参;
      endif

   endif
else (false)
:组装失败参数,用于接口返参;
endif
stop
@enduml